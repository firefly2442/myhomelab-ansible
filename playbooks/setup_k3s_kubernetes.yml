---
- hosts:
  - minisforum
  - alienware
  - blueantec
  - system76laptop
  tasks:
  - name: Install required packages (needed for longhorn and other tooling)
    become: true
    ansible.builtin.apt:
      name:
        - open-iscsi
        - jq
      state: latest
      install_recommends: yes
      update_cache: no
  - name: Install Helm binary
    become: true
    ansible.builtin.unarchive:
      # https://github.com/helm/helm/releases
      src: https://get.helm.sh/helm-v3.15.0-linux-amd64.tar.gz
      dest: /usr/local/bin/
      extra_opts: "--strip-components=1" # skip first folder
      owner: root
      group: root
      mode: 0755
      remote_src: true
  - name: Download argo-cd binary CLI
    become: true
    ansible.builtin.get_url:
      # https://github.com/argoproj/argo-cd/releases/
      url: https://github.com/argoproj/argo-cd/releases/download/v2.11.0/argocd-linux-amd64
      dest: /usr/local/bin/argocd
      owner: root
      group: root
      mode: 0755
  - name: Install Nova binary
    become: true
    ansible.builtin.unarchive:
      # https://github.com/FairwindsOps/nova/releases
      src: https://github.com/FairwindsOps/nova/releases/download/v3.9.0/nova_3.9.0_linux_amd64.tar.gz
      dest: /usr/local/bin/
      owner: root
      group: root
      mode: 0755
      remote_src: true
  - name: Install cert-manager cmctl binary
    become: true
    ansible.builtin.unarchive:
      # https://github.com/cert-manager/cert-manager/releases
      src: https://github.com/cert-manager/cert-manager/releases/download/v1.14.5/cert-manager-cmctl-linux-amd64.tar.gz
      dest: /usr/local/bin/
      owner: root
      group: root
      mode: 0755
      remote_src: true
  - name: Download k3s script
    ansible.builtin.get_url:
      url: https://get.k3s.io
      dest: /tmp/k3s.sh
  - name: Install k3s on master
    when: inventory_hostname in ['alienware']
    become: true
    # https://github.com/k3s-io/k3s/releases
    # we disable local-storage so we can use longhorn later
    # https://docs.k3s.io/cli/server
    ansible.builtin.shell: cat /tmp/k3s.sh | K3S_KUBECONFIG_MODE="644" K3S_TOKEN={{ token | quote }} INSTALL_K3S_VERSION=v1.30.0+k3s1 sh -s - server --cluster-init --tls-san {{ loadbalancer | quote }} --disable servicelb --disable local-storage
  - name: Install k3s on other nodes
    when: inventory_hostname in ['blueantec', 'minisforum']
    become: true
    ansible.builtin.shell: cat /tmp/k3s.sh | K3S_KUBECONFIG_MODE="644" K3S_TOKEN={{ token | quote }} INSTALL_K3S_VERSION=v1.30.0+k3s1 sh -s - server --server https://{{ master | quote }}:6443 --tls-san {{ loadbalancer | quote }} --disable servicelb --disable local-storage
  - name: Install k3s on laptop with just control plane, this way no workloads get assigned
    when: inventory_hostname in ['system76laptop']
    become: true
    ansible.builtin.shell: cat /tmp/k3s.sh | K3S_KUBECONFIG_MODE="644" K3S_TOKEN={{ token | quote }} INSTALL_K3S_VERSION=v1.30.0+k3s1 sh -s - server --node-taint CriticalAddonsOnly=true:NoExecute --server https://{{ master | quote }}:6443 --tls-san {{ loadbalancer | quote }} --disable servicelb --disable-etcd --disable local-storage
  - name: Set load balancer IP in /etc/rancher/k3s/k3s.yaml
    become: true
    ansible.builtin.replace:
      path: /etc/rancher/k3s/k3s.yaml
      regexp: '(server\:\shttps:\/\/).+(\:6443)'
      replace: '\g<1>{{ loadbalancer }}\g<2>'
  # https://docs.k3s.io/installation/private-registry
  - name: Adjust mirrors to use our local pull-through-cache
    become: true
    ansible.builtin.copy:
      dest: "/etc/rancher/k3s/registries.yaml"
      owner: root
      group: root
      mode: '0644'
      content: |
        mirrors:
          docker.io:
            endpoint:
              - "http://192.168.1.226:5001"
          ghcr.io:
            endpoint:
              - "http://192.168.1.226:5001"
          gcr.io:
            endpoint:
              - "http://192.168.1.226:5001"
          quay.io:
            endpoint:
              - "http://192.168.1.226:5001"
          lscr.io:
            endpoint:
              - "http://192.168.1.226:5001"
          ecr.aws:
            endpoint:
              - "http://192.168.1.226:5001"
          mcr.microsoft.com:
            endpoint:
              - "http://192.168.1.226:5001"
          registry.k8s.io:
            endpoint:
              - "http://192.168.1.226:5001"
          http://192.168.1.226:5000:
            endpoint:
              - "http://192.168.1.226:5000"
  # - name: make sure k3s has restarted to take advantage of settings
  #   become: true
  #   service:
  #     name: k3s
  #     state: restarted
  #     enabled: yes
  - name: Copy config file to home directory
    ansible.builtin.copy:
      src: /etc/rancher/k3s/k3s.yaml
      dest: ~/.kube/config
      owner: carlsonp
      group: carlsonp
      mode: u=rw,g-rwx,o-rwx
  - name: Wait for cluster handshake and spinup
    ansible.builtin.pause:
      seconds: 5
  - name: Get node status
    ansible.builtin.command: kubectl get nodes
    register: kubenodes
  - name: Show kubectl get nodes result
    ansible.builtin.debug: msg="{{ kubenodes.stdout }}"
  # - name: Add Helm repos
  #   ansible.builtin.command: "{{ item }}"
  #   with_items:
  #     - helm repo add longhorn https://charts.longhorn.io
  #     - helm repo add metallb https://metallb.github.io/metallb
  #     - helm repo add milvus https://milvus-io.github.io/milvus-helm/
  #     - helm repo add rancher-stable https://releases.rancher.com/server-charts/stable
  #     - helm repo add jetstack https://charts.jetstack.io
  #     - helm repo add argo https://argoproj.github.io/argo-helm
  #     - helm repo add authelia https://charts.authelia.com
  #     - helm repo add bitnami https://charts.bitnami.com/bitnami
  #     - helm repo add aqua https://aquasecurity.github.io/helm-charts/
  #     - helm repo add weaviate https://weaviate.github.io/weaviate-helm
  # - name: Update Helm repos
  #   ansible.builtin.command: helm repo update
  - name: Download Flux CLI
    # https://fluxcd.io/flux/installation/
    ansible.builtin.get_url:
      url: https://fluxcd.io/install.sh
      dest: /tmp/install-flux.sh
      mode: 0755
  - name: Install Flux CLI
    become: true
    ansible.builtin.shell: bash /tmp/install-flux.sh
  - name: Install k9s terminal client for Kubernetes
    # https://github.com/derailed/k9s/releases
    become: true
    ansible.builtin.apt:
      deb: https://github.com/derailed/k9s/releases/download/v0.32.4/k9s_linux_amd64.deb
      install_recommends: yes
      update_cache: no